#!/usr/bin/perl
use strict;
use warnings;

use MIDI::Simple::Drummer;
my $d = MIDI::Simple::Drummer->new(
    -bpm     => shift || 111,
    -volume  => shift || 121,
    -phrases => shift || 2,
);
#use Data::Dumper;local$Data::Dumper::Indent=1;local$Data::Dumper::Terse=1;local$Data::Dumper::Sortkeys=1;
#die Dumper($d->_p2n);

my $beat = 0;
my $fill = 0;

$d->count_in();

for my $p (1 .. $d->phrases) {
    warn "beat $beat, fill: $fill\n";
    if($p % 2 > 0) {
        $beat = $d->beat(-n => 3, -fill => $fill);
    }
    else {
        $beat = $d->beat(-n => 4);
        $fill = $d->fill(-last => $fill);
    }
}

$beat = $d->beat(-last => $beat, -fill => $fill);

#fin($d); # Perfectly reasonable but not as sexy.
$d->fill(-n => 'end', -pattern => \&fin, -type => 'fill');

$d->write;

sub fin {
    my $d = shift;
    $d->note($d->EIGHTH, $d->option_strike);
    $d->note($d->EIGHTH, $d->strike('Splash Cymbal', 'Bass Drum 1'));
    $d->note($d->SIXTEENTH, $d->snare) for 0 .. 2;
    $d->rest($d->SIXTEENTH);
    $d->note($d->EIGHTH, $d->strike('Splash Cymbal', 'Bass Drum 1'));
    $d->note($d->SIXTEENTH, $d->snare) for 0 .. 2;
    $d->note($d->EIGHTH, $d->strike('Crash Cymbal 1', 'Bass Drum 1'));
}
